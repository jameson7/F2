ILoString mary = new ConsLoString("Mary ",
            new ConsLoString("had ",
                    new ConsLoString("a ",
                            new ConsLoString("little ",
                                    new ConsLoString("lamb.", new MtLoString())))));
    ILoString mt = new MtLoString();

    ILoString hello = new ConsLoString("Hello",
            new ConsLoString("World", new MtLoString()));

    ILoString hello2 = new ConsLoString("Hello",
            new ConsLoString("I",
                    new ConsLoString("am",
                            new ConsLoString("Brendan", new MtLoString()))));

    ILoString hello3 = new ConsLoString("I",
            new ConsLoString("am",
                    new ConsLoString("Jameson", new MtLoString())));

    ILoString abc = new ConsLoString("a",
            new ConsLoString("b",
                    new ConsLoString("c", new MtLoString())));

    ILoString numb = new ConsLoString("1",
            new ConsLoString("2",
                    new ConsLoString("3",
                            new ConsLoString("4",
                                    new ConsLoString("5", new MtLoString())))));

    ILoString ucase = new ConsLoString("Bob",
            new ConsLoString("adam",
                    new ConsLoString("cam",
                            new ConsLoString("Dan", new MtLoString()))));

    ILoString dblnumb = new ConsLoString("1",
            new ConsLoString("2",
                    new ConsLoString("2",
                            new ConsLoString("3",
                                    new ConsLoString("4",
                                            new ConsLoString("5", new MtLoString()))))));

    ILoString pdrome = new ConsLoString("a",
            new ConsLoString("b",
                    new ConsLoString("c",
                            new ConsLoString("b",
                                    new ConsLoString("a", new MtLoString())))));






boolean testGetNext(Tester t) {
        return this;
    }
    
    boolean testIsSorted(Tester t) {
        return this;
    }
    
    boolean testIsCons(Tester t) {
        return;
    }
    
    boolean testIsSameList(Tester t) {
        return
    }
    
    boolean testComesBefore(Tester t) {
        return
    }
    
    boolean testSort(Tester t) {
        return this;
    }
    
    boolean testIsSameList(Tester t) {
        return this;
    }
    
    boolean testIsSameConsList(Tester t) {
        return this;
    }
    
    boolean testMerge(Tester t) {
        return this;
    }
    
    boolean testInsert(Tester t) {
        return this;
    }
}
